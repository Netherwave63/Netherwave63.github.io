{"version":3,"sources":["Project/jotter-todos-1.png","Project/jotter-todos-2.png","Project/jotter-auth-1.png","Project/jotter-auth-2.png","Project/jotter-auth-3.png","Project/hacker-news-1.png","Project/hacker-news-2.png","Navigation/index.js","About/index.js","Project/projectCard.js","Project/constants.js","Project/index.js","Modal/action.js","Project/projectDetails.js","Contact/index.js","Modal/index.js","App/index.js","serviceWorker.js","Modal/reducer.js","State/rootReducer.js","State/store.js","index.js"],"names":["module","exports","Navigation","React","useState","isActive","toggleNavbar","className","role","aria-label","to","onClick","aria-hidden","skills","About","Fragment","map","skill","key","ProjectCard","project","title","description","imgSrc1","id","window","scrollTo","style","borderBottom","src","alt","projects","JotterTodos_1","imgSrc2","JotterTodos_2","link","features","JotterAuth_1","JotterAuth_2","imgSrc3","JotterAuth_3","HackerNews_1","HackerNews_2","Project","doToggleModal","type","payload","connect","dispatch","onToggleModal","withRouter","match","params","href","target","rel","feature","Contact","username","setUsername","message","setMessage","onSubmit","event","alert","preventDefault","value","onChange","placeholder","disabled","state","modalState","exact","path","Boolean","location","hostname","initialState","applyToggleModal","action","modalReducer","rootReducer","combineReducers","store","createStore","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"gFAAAA,EAAOC,QAAU,IAA0B,4C,mBCA3CD,EAAOC,QAAU,IAA0B,4C,mBCA3CD,EAAOC,QAAU,IAA0B,2C,mBCA3CD,EAAOC,QAAU,IAA0B,2C,mBCA3CD,EAAOC,QAAU,IAA0B,2C,mBCA3CD,EAAOC,QAAU,IAA0B,2C,mBCA3CD,EAAOC,QAAU,IAA0B,2C,sJCyC5BC,EAtCK,WAAO,IAAD,EACSC,IAAMC,UAAS,GADxB,mBACjBC,EADiB,KACPC,EADO,KAGxB,OACE,yBAAKC,UAAU,iBAAiBC,KAAK,aAAaC,aAAW,mBAC3D,yBAAKF,UAAU,gBACb,kBAAC,IAAD,CAAMG,GAAG,IAAIH,UAAU,eAAvB,gBAGA,uBACEC,KAAK,SACLD,UAAWF,EAAW,0BAA4B,gBAClDM,QAAS,kBAAML,GAAcD,IAC7BI,aAAW,QAEX,0BAAMG,cAAY,SAClB,0BAAMA,cAAY,SAClB,0BAAMA,cAAY,WAItB,yBAAKL,UAAWF,EAAW,wBAA0B,eACnD,yBAAKE,UAAU,cACb,kBAAC,IAAD,CAAMG,GAAG,IAAIH,UAAU,cAAcI,QAAS,kBAAML,GAAcD,KAAlE,SAGA,kBAAC,IAAD,CAAMK,GAAG,YAAYH,UAAU,cAAcI,QAAS,kBAAML,GAAcD,KAA1E,YAGA,kBAAC,IAAD,CAAMK,GAAG,WAAWH,UAAU,cAAcI,QAAS,kBAAML,GAAcD,KAAzE,eC5BJQ,EAAS,CACb,WACA,iBACA,gDACA,2DACA,2BACA,kCACA,oBACA,0BACA,iCACA,wEACA,kDACA,mBACA,oBA4BaC,EAzBD,kBACZ,kBAAC,IAAMC,SAAP,KACE,6BAASR,UAAU,WACjB,yBAAKA,UAAU,aACb,wBAAIA,UAAU,SAAd,YACA,mJAIJ,6BAASA,UAAU,WACjB,yBAAKA,UAAU,aACb,wBAAIA,UAAU,SAAd,UACA,yBAAKA,UAAU,WACb,4BACGM,EAAOG,KAAI,SAAAC,GAAK,OACf,wBAAIC,IAAKD,GAAQA,YCDhBE,EA7BK,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAEnBC,EAIED,EAJFC,MACAC,EAGEF,EAHFE,YACAC,EAEEH,EAFFG,QACAC,EACEJ,EADFI,GAGF,OACE,yBAAKjB,UAAU,UACb,kBAAC,IAAD,CAAMG,GAAE,oBAAec,GAAMb,QAAS,kBAAMc,OAAOC,SAAS,EAAG,KAC/D,yBAAKnB,UAAU,QACb,yBAAKA,UAAU,aAAaoB,MAAO,CAAEC,aAAc,sBACjD,4BAAQrB,UAAU,SAChB,yBAAKsB,IAAMN,EAAUO,IAAMT,MAI/B,yBAAKd,UAAU,gBACb,uBAAGA,UAAU,YAAac,GAC1B,2BAAKC,Q,uHCjBFS,EAAW,CACtB,CACEP,GAAI,IACJD,QAASS,IACTC,QAASC,IACTb,MAAO,uBACPC,YAAa,mGACba,KAAM,8CACNC,SAAU,CACR,yEACD,wCACA,iEACC,mEACD,2CACA,4EACA,4DACA,iCAGH,CACEZ,GAAI,IACJD,QAASc,IACTJ,QAASK,IACTC,QAASC,IACTnB,MAAO,sBACPC,YAAa,oHACba,KAAM,uCACNC,SAAU,CACR,2DACD,2DACC,sDACA,2CACD,uDACA,yCAGH,CACEZ,GAAI,IACJD,QAASkB,IACTR,QAASS,IACTrB,MAAO,sBACPC,YAAa,8DACba,KAAM,gDACNC,SAAU,CACR,iEACD,yEACA,uCACA,iBACA,6DC5BUO,EAlBC,kBACd,6BAASpC,UAAU,WACjB,yBAAKA,UAAU,aACb,wBAAIA,UAAU,SAAd,YACE,6BACA,yBAAKA,UAAU,WACdwB,EAASf,KAAI,SAAAI,GAAO,OACnB,6BAASF,IAAKE,EAAQI,IACpB,kBAAC,EAAD,CAAaJ,QAASA,IACtB,qCCfNwB,EAAgB,eAACf,EAAD,uDAAO,GAAP,MAAe,CACnCgB,KAJmB,eAKnBC,QAAS,CACPjB,SC+EWkB,cACb,MALyB,SAAAC,GAAQ,MAAK,CACtCC,cAAe,SAAApB,GAAG,OAAImB,EAASJ,EAAcf,QAGhCkB,CAGbG,aA/EqB,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,MAAOF,EAAoB,EAApBA,cAAoB,EAS/ClB,EAASoB,EAAMC,OAAO5B,IAPxBD,EAFiD,EAEjDA,QACAU,EAHiD,EAGjDA,QAHiD,IAIjDM,eAJiD,MAIvC,KAJuC,EAKjDlB,EALiD,EAKjDA,MACAC,EANiD,EAMjDA,YACAa,EAPiD,EAOjDA,KACAC,EARiD,EAQjDA,SAGF,OACE,kBAAC,IAAMrB,SAAP,KACE,6BAASR,UAAU,WACjB,yBAAKA,UAAU,aACb,wBAAIA,UAAU,SAAQ,uBAAG8C,KAAMlB,EAAMmB,OAAO,SAASC,IAAI,uBAAwBlC,IACjF,6BAEA,wBAAId,UAAU,mBAAd,eACA,2BAAKe,GACL,6BAEA,wBAAIf,UAAU,mBAAd,cACA,yBAAKA,UAAU,WACb,yBAAKA,UAAU,eACb,4BAAQA,UAAU,QAAQI,QAAS,kBAAMsC,EAAc1B,KACrD,yBAAKM,IAAKN,EAASO,IAAI,mBAG3B,yBAAKvB,UAAU,eACb,4BAAQA,UAAU,QAAQI,QAAS,kBAAMsC,EAAchB,KACrD,yBAAKJ,IAAKI,EAASH,IAAI,mBAG1BS,GACC,yBAAKhC,UAAU,eACb,4BAAQA,UAAU,QAAQI,QAAS,kBAAMsC,EAAcV,KACrD,yBAAKV,IAAKU,EAAST,IAAI,oBAK/B,6BAEA,wBAAIvB,UAAU,mBAAd,YACA,yBAAKA,UAAU,WACb,4BACG6B,EAASpB,KAAI,SAAAwC,GAAO,OACnB,wBAAItC,IAAKsC,GAAUA,QAIzB,6BAEA,wBAAIjD,UAAU,mBAAd,uBACA,2BAAG,uBAAG8C,KAAMlB,EAAMmB,OAAO,SAASC,IAAI,uBAAwBpB,IAC9D,6BACA,6BAEA,kBAAC,IAAD,CAAMzB,GAAG,YAAYC,QAAS,kBAAMc,OAAOC,SAAS,EAAG,KACrD,4BAAQnB,UAAU,UAAlB,kBAEF,6BAEA,oCCbKkD,EAzDC,WAAO,IAAD,EACYtD,IAAMC,SAAS,IAD3B,mBACbsD,EADa,KACHC,EADG,OAEUxD,IAAMC,SAAS,IAFzB,mBAEbwD,EAFa,KAEJC,EAFI,KAWpB,OACE,6BAAStD,UAAU,WACjB,yBAAKA,UAAU,aACb,wBAAIA,UAAU,SAAd,cAEA,yBAAKA,UAAU,WACb,yBAAKA,UAAU,eACb,0BAAMuD,SAdC,SAAAC,GACfC,MAAM,2CACNL,EAAY,IACZE,EAAW,IACXE,EAAME,mBAWI,yBAAK1D,UAAU,SACb,2BAAOA,UAAU,SAAjB,QACA,yBAAKA,UAAU,WACb,2BACEsC,KAAK,OACLtC,UAAU,QACV2D,MAAOR,EACPS,SAAU,SAAAJ,GAAK,OAAIJ,EAAYI,EAAMT,OAAOY,YAKlD,yBAAK3D,UAAU,SACb,2BAAOA,UAAU,SAAjB,WACA,yBAAKA,UAAU,WACb,8BACEA,UAAU,WACV6D,YAAY,oBACZF,MAAON,EACPO,SAAU,SAAAJ,GAAK,OAAIF,EAAWE,EAAMT,OAAOY,YAKjD,yBAAK3D,UAAU,SACb,yBAAKA,UAAU,WACb,4BAAQsC,KAAK,SAAStC,UAAU,iBAAiB8D,SAAuB,KAAbX,GAA+B,KAAZE,GAA9E,kBCdHb,eARS,SAAAuB,GAAK,MAAK,CAChCzC,IAAKyC,EAAMC,WAAW1C,QAGG,SAAAmB,GAAQ,MAAK,CACtCC,cAAe,kBAAMD,EAASJ,SAGjBG,EA3BD,SAAC,GAA2B,IAAzBlB,EAAwB,EAAxBA,IAAKoB,EAAmB,EAAnBA,cAEpB,OACE,yBAAK1C,UAAU,mBACb,yBAAKA,UAAU,mBAAmBI,QAAS,kBAAMsC,OAGjD,yBAAK1C,UAAU,iBACb,uBAAGA,UAAU,SACX,yBAAKsB,IAAKA,EAAKC,IAAI,qBAIvB,4BAAQvB,UAAU,uBAAuBI,QAAS,kBAAMsC,WC+B/CF,eAJS,SAAAuB,GAAK,MAAK,CAChCjE,SAAUiE,EAAMC,WAAWlE,YAGd0C,EAlCH,SAAC,GAAD,IAAG1C,EAAH,EAAGA,SAAH,OACV,kBAAC,IAAD,KACE,kBAAC,EAAD,MAEA,8BACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOmE,OAAK,EAACC,KAAK,KAChB,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,iBACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,aACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,YACV,kBAAC,EAAD,QAIHpE,EAAW,kBAAC,EAAD,MAAY,MAG1B,4BAAQE,UAAU,UAChB,kDAAuB,6BAAvB,gCC9BcmE,QACW,cAA7BjD,OAAOkD,SAASC,UAEe,UAA7BnD,OAAOkD,SAASC,UAEhBnD,OAAOkD,SAASC,SAASzB,MACvB,2D,YCdA0B,EAAe,CACnBxE,UAAU,EACVwB,IAAK,IAeDiD,EAAmB,SAACR,EAAOS,GAAR,MAAoB,CAC3C1E,UAAWiE,EAAMjE,SACjBwB,IAAKkD,EAAOjC,QAAQjB,MAIPmD,EAjBM,WAAmC,IAAlCV,EAAiC,uDAAzBO,EAAcE,EAAW,uCACrD,OAAOA,EAAOlC,MACZ,INXiB,eMYf,OAAOiC,EAAiBR,EAAOS,GAEjC,QACE,OAAOT,ICJEW,EALKC,YAAgB,CAClCX,WAAYS,ICICG,EALDC,YACZH,GCCFI,IAASC,OACP,kBAAC,IAAD,CAAUH,MAAOA,GACf,kBAAC,EAAD,OAEFI,SAASC,eAAe,SJoHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.cc73c12c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/jotter-todos-1.bf44c758.png\";","module.exports = __webpack_public_path__ + \"static/media/jotter-todos-2.bca9f042.png\";","module.exports = __webpack_public_path__ + \"static/media/jotter-auth-1.2a19314f.png\";","module.exports = __webpack_public_path__ + \"static/media/jotter-auth-2.3ad321a4.png\";","module.exports = __webpack_public_path__ + \"static/media/jotter-auth-3.9c929fa8.png\";","module.exports = __webpack_public_path__ + \"static/media/hacker-news-1.cd0a2af0.png\";","module.exports = __webpack_public_path__ + \"static/media/hacker-news-2.e7475fe8.png\";","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Navigation =  () => {\r\n  const [isActive, toggleNavbar] = React.useState(false);\r\n\r\n  return (\r\n    <nav className=\"navbar is-dark\" role=\"navigation\" aria-label=\"main navigation\">\r\n      <div className=\"navbar-brand\">\r\n        <Link to=\"/\" className=\"navbar-item\">\r\n          Netherwave63\r\n        </Link>\r\n        <a \r\n          role=\"button\"\r\n          className={isActive ? \"navbar-burger is-active\" : \"navbar-burger\"}\r\n          onClick={() => toggleNavbar(!isActive)}\r\n          aria-label=\"menu\"  \r\n        >\r\n          <span aria-hidden=\"true\"></span>\r\n          <span aria-hidden=\"true\"></span>\r\n          <span aria-hidden=\"true\"></span>\r\n        </a>\r\n      </div>\r\n\r\n      <div className={isActive ? \"navbar-menu is-active\" : \"navbar-menu\"}>\r\n        <div className=\"navbar-end\">\r\n          <Link to=\"/\" className=\"navbar-item\" onClick={() => toggleNavbar(!isActive)}>\r\n            About\r\n          </Link>\r\n          <Link to=\"/projects\" className=\"navbar-item\" onClick={() => toggleNavbar(!isActive)}>\r\n            Projects\r\n          </Link>\r\n          <Link to=\"/contact\" className=\"navbar-item\" onClick={() => toggleNavbar(!isActive)}>\r\n            Contact\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navigation;","// dependencies\r\nimport React from 'react';\r\n\r\n// About\r\nconst skills = [\r\n  \"HTML/CSS\",\r\n  \"Javascript ES6\",\r\n  \"CSS Framework (Bootstrap, Materialize, Bulma)\",\r\n  \"Javascript Framework/ Library (React, Redux, Redux-Saga)\",\r\n  \"Version Control with Git\",\r\n  \"Testing/ Mocking (Jest, Enzyme)\",\r\n  \"Responsive Design\",\r\n  \"Browser Developer Tools\",\r\n  \"Command Line (Window Terminal)\",\r\n  \"Integrate with Cloud Storage, Database, REST API, user authentication\",\r\n  \"IDE Tools (Visual studio code, Atom, Notepad++)\",\r\n  \"Basic Deployment\",\r\n  \"Backend: Node.js\"\r\n];\r\n\r\nconst About = () => (\r\n  <React.Fragment>\r\n    <section className=\"section\">\r\n      <div className=\"container\">\r\n        <h1 className=\"title\">About me</h1>\r\n        <p>Hello, I'm Netherwave, a passionate in web development. I am working towards the goal of becoming a web developer.</p>\r\n      </div>\r\n    </section>\r\n\r\n    <section className=\"section\">\r\n      <div className=\"container\">\r\n        <h1 className=\"title\">Skills</h1>\r\n        <div className=\"content\">\r\n          <ul>\r\n            {skills.map(skill =>\r\n              <li key={skill}>{skill}</li>\r\n            )}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  </React.Fragment>\r\n);\r\n\r\n// export\r\nexport default About;\r\n","// dependencies\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\n// ProjectCard\r\nconst ProjectCard = ({ project }) => {\r\n  const {\r\n    title,\r\n    description,\r\n    imgSrc1,\r\n    id\r\n  } = project;\r\n\r\n  return (\r\n    <div className=\"column\">\r\n      <Link to={`/projects/${id}`} onClick={() => window.scrollTo(0, 0)}>\r\n      <div className=\"card\">\r\n        <div className=\"card-image\" style={{ borderBottom: \"1px solid #d3d3d3\"}}>\r\n          <figure className=\"image\">\r\n            <img src={ imgSrc1 } alt={ title } />\r\n          </figure>\r\n        </div>\r\n        \r\n        <div className=\"card-content\">\r\n          <p className=\"subtitle\">{ title }</p>   \r\n          <p>{ description }</p>\r\n        </div>\r\n      </div>\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n\r\n// export\r\nexport default ProjectCard;","import JotterTodos_1 from './jotter-todos-1.png';\r\nimport JotterTodos_2 from './jotter-todos-2.png';\r\nimport JotterAuth_1 from './jotter-auth-1.png';\r\nimport JotterAuth_2 from './jotter-auth-2.png';\r\nimport JotterAuth_3 from './jotter-auth-3.png';\r\nimport HackerNews_1 from './hacker-news-1.png';\r\nimport HackerNews_2 from './hacker-news-2.png';\r\n\r\nexport const projects = [\r\n  {\r\n    id: '0',\r\n    imgSrc1: JotterTodos_1,\r\n    imgSrc2: JotterTodos_2,\r\n    title: \"Jotter Todos Web App\",\r\n    description: \"The classic To-Do application where a user can write down all the things he wants to accomplish.\",\r\n    link: \"https://cryptic-bastion-87336.herokuapp.com\",\r\n    features: [\r\n      \"Basic CRUD operations where user can create, view, edit or delete todo\",\r\n\t    \"Can mark / unmark a todo as completed\",\r\n\t    \"User can toggle the lists with all the completed / active todo\",\r\n      \"User can sort the lists by alphablet, date, completed or reverse\",\r\n\t    \"Use localStorage to retrieve user's data\",\r\n\t    \"Details like store creation date, user can add more note and set due date\",\r\n\t    \"UI components with hamburger navbar, display lists, modal\",\r\n\t    \"State management using Redux\"\r\n      ]\r\n  },\r\n  {\r\n    id: '1',\r\n    imgSrc1: JotterAuth_1,\r\n    imgSrc2: JotterAuth_2,\r\n    imgSrc3: JotterAuth_3,\r\n    title: \"Jotter Auth Web App\",\r\n    description: \"Simple user authentication for web apps where user can sign up / log in and get access to the data from database.\",\r\n    link: \"https://jotter-dcea2.firebaseapp.com\",\r\n    features: [\r\n      \"Simple todo App Using Google Firebase as a cloud backend\",\r\n\t    \"User can login / sign up with email and password account\",\r\n      \"Integrate with social media apis to login / sign up\",\r\n      \"Email verification, password forgot help\",\r\n\t    \"Use cloud database to store and retrieve user's data\",\r\n\t    \"Single page application with routing\"\r\n    ]\r\n  },\r\n  {\r\n    id: '2',\r\n    imgSrc1: HackerNews_1,\r\n    imgSrc2: HackerNews_2,\r\n    title: \"Hacker News Web App\",\r\n    description: \"A hacker news search app using react, redux and redux-saga.\",\r\n    link: \"http://protected-citadel-85961.herokuapp.com/\",\r\n    features: [\r\n      \"Use react, redux and redux saga that quires the Hackernews API\",\r\n\t    \"Display an infinite scroll list for fetching more stories from the API\",\r\n\t    \"Client side cache for search history\",\r\n\t    \"Error handling\",\r\n\t    \"Axios instead of fetch API (polyfill for older browser)\"\r\n    ]\r\n  }\r\n];","// dependencies\r\nimport React from 'react';\r\n\r\n// others\r\nimport ProjectCard from './projectCard';\r\n\r\n// state\r\nimport { projects } from './constants';\r\n\r\n// Project\r\nconst Project = () => (\r\n  <section className=\"section\">\r\n    <div className=\"container\">\r\n      <h1 className=\"title\">Projects</h1>\r\n        <br />\r\n        <div className=\"columns\">\r\n        {projects.map(project =>\r\n          <article key={project.id}>\r\n            <ProjectCard project={project} />\r\n            <br />\r\n          </article>\r\n        )}    \r\n        </div>\r\n    </div>\r\n  </section>\r\n);\r\n\r\n// export \r\nexport default Project;","// action type\r\nconst MODAL_TOGGLE = 'MODAL_TOGGLE';\r\n\r\n// action creator\r\nconst doToggleModal = (src = '') => ({\r\n  type: MODAL_TOGGLE,\r\n  payload: {\r\n    src\r\n  }\r\n});\r\n\r\n// export\r\nexport {\r\n  MODAL_TOGGLE,\r\n  doToggleModal\r\n};","// dependencies\r\nimport React from 'react';\r\nimport { withRouter, Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\n// others\r\nimport { projects } from './constants';\r\nimport { doToggleModal } from '../Modal/action';\r\n\r\n// ProjectCard\r\nconst ProjectDetails = ({ match, onToggleModal }) => {\r\n  const {\r\n    imgSrc1,\r\n    imgSrc2,\r\n    imgSrc3 = null,\r\n    title,\r\n    description,\r\n    link,\r\n    features\r\n  } = projects[match.params.id];\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <section className=\"section\">\r\n        <div className=\"container\">\r\n          <h2 className=\"title\"><a href={link} target=\"_blank\" rel=\"noopener noreferrer\">{ title }</a></h2>\r\n          <br />\r\n\r\n          <h3 className=\"title is-size-5\">Description</h3>\r\n          <p>{ description }</p>\r\n          <br />\r\n\r\n          <h3 className=\"title is-size-5\">Screenshot</h3>\r\n          <div className=\"columns\">\r\n            <div className=\"column is-4\">\r\n              <figure className=\"image\" onClick={() => onToggleModal(imgSrc1)}>\r\n                <img src={imgSrc1} alt=\"screenshot-1\" />\r\n              </figure>\r\n            </div>\r\n            <div className=\"column is-4\">\r\n              <figure className=\"image\" onClick={() => onToggleModal(imgSrc2)}>\r\n                <img src={imgSrc2} alt=\"screenshot-2\" />\r\n              </figure>\r\n            </div>\r\n            {imgSrc3 &&\r\n              <div className=\"column is-4\">\r\n                <figure className=\"image\" onClick={() => onToggleModal(imgSrc3)}>\r\n                  <img src={imgSrc3} alt=\"screenshot-3\" />\r\n                </figure>\r\n              </div>\r\n            }\r\n          </div>\r\n          <br />\r\n\r\n          <h3 className=\"title is-size-5\">Features</h3>\r\n          <div className=\"content\">\r\n            <ul>\r\n              {features.map(feature =>\r\n                <li key={feature}>{feature}</li>\r\n              )}\r\n            </ul>\r\n          </div>\r\n          <br />\r\n          \r\n          <h3 className=\"title is-size-5\">Link to the project</h3>\r\n          <p><a href={link} target=\"_blank\" rel=\"noopener noreferrer\">{ link }</a></p>\r\n          <br />\r\n          <br />\r\n\r\n          <Link to=\"/projects\" onClick={() => window.scrollTo(0, 0)}>\r\n            <button className=\"button\">Back to Lists</button>\r\n          </Link>\r\n          <br />\r\n\r\n          <hr />\r\n        </div>\r\n      </section>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\n// export\r\nconst mapDispatchToProps = dispatch => ({\r\n  onToggleModal: src => dispatch(doToggleModal(src))\r\n});\r\n\r\nexport default connect(\r\n  null,\r\n  mapDispatchToProps\r\n)(withRouter(ProjectDetails));","// dependencies\r\nimport React from 'react';\r\n\r\n// Contact\r\nconst Contact = () => {\r\n  const [username, setUsername] = React.useState('');\r\n  const [message, setMessage] = React.useState('');\r\n\r\n  const onSubmit = event => {\r\n    alert(\"Thank you for submitting your feedback.\");\r\n    setUsername('');\r\n    setMessage('');\r\n    event.preventDefault();\r\n  }\r\n\r\n  return (\r\n    <section className=\"section\">\r\n      <div className=\"container\">\r\n        <h1 className=\"title\">Contact me</h1>\r\n\r\n        <div className=\"columns\">\r\n          <div className=\"column is-7\">\r\n            <form onSubmit={onSubmit}>\r\n              <div className=\"field\">\r\n                <label className=\"label\">Name</label>\r\n                <div className=\"control\">\r\n                  <input \r\n                    type=\"text\"\r\n                    className=\"input\"\r\n                    value={username}\r\n                    onChange={event => setUsername(event.target.value)}\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"field\">\r\n                <label className=\"label\">Message</label>\r\n                <div className=\"control\">\r\n                  <textarea \r\n                    className=\"textarea\" \r\n                    placeholder=\"Your message here\"\r\n                    value={message}\r\n                    onChange={event => setMessage(event.target.value)}\r\n                  ></textarea>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"field\">\r\n                <div className=\"control\">\r\n                  <button type=\"submit\" className=\"button is-dark\" disabled={username === '' || message === ''}>Submit</button>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\n// export\r\nexport default Contact;","// dependencies\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\n// others\r\nimport { doToggleModal } from './action';\r\n\r\n// Modal\r\nconst Modal = ({ src, onToggleModal}) => {\r\n\r\n  return (\r\n    <div className=\"modal is-active\">\r\n      <div className=\"modal-background\" onClick={() => onToggleModal()}>\r\n      </div>\r\n\r\n      <div className=\"modal-content\">\r\n        <p className=\"image\">\r\n          <img src={src} alt=\"screenshot pic\"/>\r\n        </p>\r\n      </div>\r\n\r\n      <button className=\"modal-close is-large\" onClick={() => onToggleModal()}></button>\r\n    </div>\r\n  );\r\n};\r\n\r\n// export \r\nconst mapStateToProps = state => ({\r\n  src: state.modalState.src\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onToggleModal: () => dispatch(doToggleModal())\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Modal);","// dependencies\r\nimport React from 'react';\r\nimport { \r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route \r\n} from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\n// others\r\nimport Navigation from '../Navigation';\r\nimport About from '../About';\r\nimport Project from '../Project';\r\nimport ProjectDetails from '../Project/projectDetails';\r\nimport Contact from '../Contact';\r\nimport Modal from '../Modal';\r\n\r\n// App\r\nconst App = ({ isActive }) => (\r\n  <Router>\r\n    <Navigation />\r\n\r\n    <main>\r\n      <Switch>\r\n        <Route exact path=\"/\">\r\n          <About />\r\n        </Route>\r\n        <Route path=\"/projects/:id\">\r\n          <ProjectDetails />\r\n        </Route>\r\n        <Route path=\"/projects\">\r\n          <Project />\r\n        </Route>\r\n        <Route path=\"/contact\">\r\n          <Contact />\r\n        </Route>\r\n      </Switch>\r\n\r\n      {isActive ? <Modal /> : null}\r\n    </main>\r\n\r\n    <footer className=\"footer\">\r\n      <p>By Netherwave @2020 <br/> Website in progress...</p>\r\n    </footer>\r\n  </Router>\r\n);\r\n\r\n// export \r\nconst mapStateToProps = state => ({\r\n  isActive: state.modalState.isActive\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps\r\n)(App);","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","// import action type\r\nimport { MODAL_TOGGLE } from './action';\r\n\r\n// initial state\r\nconst initialState = {\r\n  isActive: false,\r\n  src: ''\r\n};\r\n\r\n// reducer\r\nconst modalReducer = (state = initialState, action) => {\r\n  switch(action.type) {\r\n    case MODAL_TOGGLE:\r\n      return applyToggleModal(state, action);\r\n\r\n    default:\r\n      return state;\r\n  };\r\n};\r\n\r\n// apply functionalities\r\nconst applyToggleModal = (state, action) => ({\r\n  isActive: !state.isActive,\r\n  src: action.payload.src\r\n});\r\n\r\n// export \r\nexport default modalReducer;\r\n\r\n","// dependencies\r\nimport { combineReducers } from 'redux';\r\n\r\n// import all reducers\r\nimport modalReducer from '../Modal/reducer';\r\n\r\n// rootReducer\r\nconst rootReducer = combineReducers({\r\n  modalState: modalReducer\r\n});\r\n\r\n// export\r\nexport default rootReducer;\r\n","// dependencies\r\nimport { createStore } from 'redux';\r\n\r\n// import reducers\r\nimport rootReducer from './rootReducer';\r\n\r\n// store\r\nconst store = createStore(\r\n  rootReducer\r\n);\r\n\r\n// export\r\nexport default store;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bulma/css/bulma.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport store from './State/store';\r\nimport { Provider } from 'react-redux';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}